#!/usr/bin/env python
"""
Usage:
    snappy [--config=<file>] [--help] [--debug] <command> [<args>...]

Options:
    -c=<file>, --config=<file>  Configuration file to use [default: config-sample.yaml]
    -h, --help                  Display this help
    -d, --debug                 enable debug output

Commands:
    agent       Run the snapshot agent
    snapshot    Snapshot management

See 'snappy help <command>' for more information on a specific command
"""

# temp for testing on dev
import sys
sys.path.insert(0, '/home/ubuntu/snappy')

from snappy import utils
from docopt import docopt
import importlib

if __name__ == "__main__":
    args = docopt(__doc__, options_first=True)

    if args['<command>'] == "help":
        # we need this because help requires an argument but is not a real package
        if args['<args>'] is not []:
            # print __doc__ would work too..
            print(docopt(__doc__, argv=['snappy', '--help']))
            exit(0)

        argv = args['<args>'] + ['--help']
    else:
        argv = [args['<command>']] + args['<args>']

    utils.load_config(args['--config'])
    utils.load_logger("snappy-{}".format(argv[0]), args['--debug'])

    try:
        command = importlib.import_module('{0}.{1}'.format('snappy.command', argv[0]))
    except ImportError:
        print('Err: command {} not found'.format(argv[0]))
        exit(1)
    except TypeError:
        print('Err: parse __doc__ string for {}'.format(argv[0]))
        exit(255)

    command.main(docopt(command.__doc__, argv=argv))

